[build-system]
# this version is required to support reading of version in setup.cfg
requires = ["flit_core >= 3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "aiidalab"
dynamic = ['version']
authors = [{name = 'The AiiDAlab team', email = 'aiidalab@materialcloud.org'}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AiiDA",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
    "cachetools~=4.1",
    "click>=7.0,<9",
    "click-spinner~=0.1",
    "dulwich~=0.20",
    "packaging>=20.1",
    "pip",
    "requests~=2.27",
    "requests-cache~=1.0",
    "tabulate~=0.8",
    "toml~=0.10",
    "traitlets~=5.0",
    "watchdog~=4.0",
]
description = "Implements core functions of AiiDAlab"
license = {file = 'LICENSE'}
readme = 'README.md'
requires-python = '>=3.9'

[project.scripts]
aiidalab = "aiidalab.__main__:cli"


[project.optional-dependencies]
dev = [
    "bumpver>=2021.1114",
    "pre-commit>=3.5",
    "pytest~=8.2.0",
    "pytest-cov~=5.0",
    "ruamel.yaml~=0.16",
]
registry = [
    "CacheControl~=0.12",
    "jsonref~=0.2",
    "jsonschema[format]~=3.2",
    "Jinja2~=3.0",
    "requests-mock~=1.8",
    "ruamel.yaml~=0.16",
]
docs = [
    "pydata-sphinx-theme~=0.13.3",
    "sphinx~=4.5.0",
    "sphinx-design~=0.4.0",
    "sphinxcontrib-contentui",
    "sphinxcontrib-details-directive; python_version >= '3.0'",
    # NOTE: These need to be pinned due to incompatibility with sphinx<5.0
    # https://github.com/sphinx-doc/sphinx/issues/11890
    # We can't easily upgrade to sphinx v5.0 since sphinx-panels is incompatible
    # and is deprecated, we'd need to migrate to sphinx-design.
    # https://sphinx-design.readthedocs.io/en/latest/get_started.html#migrating-from-sphinx-panels
    "sphinxcontrib-applehelp==1.0.4",
    "sphinxcontrib-devhelp==1.0.2",
    "sphinxcontrib-htmlhelp==2.0.1",
    "sphinxcontrib-qthelp==1.0.3",
    "sphinxcontrib-serializinghtml==1.1.5",
]


[project.urls]
Documentation = 'https://aiidalab.readthedocs.io/en/latest/'
Home = 'https://www.aiidalab.net/'
Source = 'https://github.com/aiidalab/aiidalab'

[tool.flit.module]
name = 'aiidalab'

[tool.flit.sdist]
exclude = [
  'docs/',
  'tests/'
]

[tool.mypy]
strict = true
ignore_missing_imports = true
strict_optional = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "aiidalab.registry.*"
ignore_errors = true

[tool.bumpver]
current_version = "v24.09.0"
version_pattern = "v0Y.0M.PATCH[PYTAGNUM]"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"aiidalab/__init__.py" = ["__version__ = \"{pep440_version}\""]

[tool.ruff]
line-length = 88
show-fixes = true
target-version = "py38"

[tool.ruff.lint]
ignore = ["E501", "E402", "B904", "TRY003"]
select = [
  "A",    # flake8-builtins
  "ARG",  # flake8-unused-arguments
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "E",    # pycodestyle
  "F",    # pyflakes
  "I",    # isort
  "N",    # pep8-naming
  "PLE",  # pylint error rules
  "PLW",  # pylint warning rules
  "PLC",  # pylint convention rules
  "RUF",  # ruff-specific rules
  "TRY",  # Tryceratops
  "UP"    # pyupgrade
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG001"]

[tool.pytest.ini_options]
addopts = '--strict-config --strict-markers -ra'
markers = [
  'registry: Tests relating to AiiDAlab registry functionality',
]
